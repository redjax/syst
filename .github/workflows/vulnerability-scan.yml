---
name: Vulnerability Scan

on:
  workflow_call: {}
  workflow_dispatch: {}
  #  Disabled until I can get it to work
  # schedule:
    ## Every day at 1am
    # - cron: '0 1 * * *'

jobs:
  vulnerability-scan:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Extract Go version from go.mod
        id: go-version
        run: |
          GO_VERSION=$(grep '^go ' go.mod | awk '{print $2}')
          echo "version=$GO_VERSION" >> $GITHUB_OUTPUT
          echo "Detected Go version: $GO_VERSION"
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.go-version.outputs.version }}
      
      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest
      
      - name: Run govulncheck (human-readable output)
        id: govulncheck
        continue-on-error: true
        run: |
          echo "Running vulnerability scan..."
          govulncheck ./... 2>&1 | tee govulncheck-report.txt
          EXIT_CODE=${PIPESTATUS[0]}
          echo "exit_code=$EXIT_CODE" >> $GITHUB_OUTPUT
          exit $EXIT_CODE
      
      - name: Run govulncheck (JSON/SARIF output)
        if: always()
        continue-on-error: true
        run: |
          govulncheck -format sarif ./... > govulncheck-report.sarif 2>&1 || true
      
      - name: Upload govulncheck text report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: govulncheck-report-txt
          path: govulncheck-report.txt
      
      - name: Upload govulncheck SARIF report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: govulncheck-report-sarif
          path: govulncheck-report.sarif
      
      - name: Upload SARIF to GitHub Security
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: govulncheck-report.sarif
          category: govulncheck
        continue-on-error: true

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-no-fail -fmt=json -out=gosec-report.json ./...'

      - name: Upload Gosec Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gosec-report
          path: gosec-report.json
      
      - name: Fail if vulnerabilities found
        if: steps.govulncheck.outputs.exit_code != '0'
        run: |
          echo "::error::Vulnerabilities found! Check the govulncheck-report-txt artifact for details."
          exit 1

