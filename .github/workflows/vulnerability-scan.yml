---
name: Vulnerability Scan

on:
  workflow_call: {}
  workflow_dispatch: {}
  #  Disabled until I can get it to work
  # schedule:
    ## Every day at 1am
    # - cron: '0 1 * * *'

jobs:
  vulnerability-scan:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Extract Go version from go.mod
        id: go-version
        run: |
          GO_VERSION=$(grep '^go ' go.mod | awk '{print $2}')
          echo "version=$GO_VERSION" >> $GITHUB_OUTPUT
          echo "Detected Go version: $GO_VERSION"
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.go-version.outputs.version }}
      
      - name: Run vulnerability scan script
        id: vuln-scan
        continue-on-error: true
        run: |
          chmod +x ./scripts/vuln-scan.sh
          ./scripts/vuln-scan.sh
          echo "exit_code=$?" >> $GITHUB_OUTPUT
      
      - name: Upload vulnerability reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vulnerability-reports
          path: vulnerability-reports/
      
      - name: Check for actual CVE vulnerabilities
        id: check-vulns
        if: always()
        run: |
          # Check if govulncheck found actual vulnerabilities (not just call graphs)
          if grep -q "No vulnerabilities found" vulnerability-reports/govulncheck-report.txt; then
            echo "has_vulns=false" >> $GITHUB_OUTPUT
            echo "✅ No CVE vulnerabilities found"
          else
            # Check if there are actual vulnerability findings (not just traces)
            if grep -qE "^(Vulnerability|Found)" vulnerability-reports/govulncheck-report.txt; then
              echo "has_vulns=true" >> $GITHUB_OUTPUT
              echo "⚠️ CVE vulnerabilities detected"
            else
              echo "has_vulns=false" >> $GITHUB_OUTPUT
              echo "✅ No actionable vulnerabilities found (only stdlib traces)"
            fi
          fi
      
      - name: Display scan results
        if: always()
        run: |
          echo "::group::📊 Govulncheck Results"
          if [ -f vulnerability-reports/govulncheck-report.txt ]; then
            cat vulnerability-reports/govulncheck-report.txt
          else
            echo "No govulncheck report found"
          fi
          echo "::endgroup::"
          
          echo "::group::🔒 Gosec Results (Last 30 lines)"
          if [ -f vulnerability-reports/gosec-report.txt ]; then
            tail -n 30 vulnerability-reports/gosec-report.txt
          else
            echo "No gosec report found"
          fi
          echo "::endgroup::"
      
      - name: Fail if CVE vulnerabilities found
        if: steps.check-vulns.outputs.has_vulns == 'true'
        run: |
          echo "::error title=CVE Vulnerabilities Detected::Your dependencies have known security vulnerabilities"
          echo ""
          echo "======================================"
          echo "VULNERABILITY SCAN FAILED"
          echo "======================================"
          echo ""
          echo "ACTION REQUIRED: CVE vulnerabilities found in dependencies"
          echo ""
          echo "View detailed reports:"
          echo "  1. Click the 'Summary' tab above"
          echo "  2. Download the 'vulnerability-reports' artifact"
          echo "  3. Open: govulncheck-report.txt"
          echo ""
          echo "How to fix:"
          echo "  - Run: go get -u ./..."
          echo "  - Or update specific dependencies listed in the report"
          echo ""
          echo "The gosec findings are code quality issues, not CVEs"
          echo ""
          exit 1

